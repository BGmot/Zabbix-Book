{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What is this book about ?","text":"<p>Hi, welcome and thank you for your interest in my Zabbix book. I wrote the Zabbix cookbook and Zabbix 4 Network Monitoring  a few years ago for PackPub. As Zabbix is an opensource product and making money out of the books was never my intention, it got me thinking how to do things different. How to make a new book without using a publisher like I had done before. After a while, I came up with the idea to make a book that would be free and that would be updated when new versions came out. Since I am a huge fan of documetation in markdown or asciidoc I came up with the idea to share the book in git and use markdown. The only problem left was how to make those markdown files readable in an easy way like a book ? After some searching trying to look for a good solution I found MkDocs. MkDocs is a Python-Markdown library that can convert everything to HTML and can be templated. So the problem was solved and a new book was born.</p>"},{"location":"#who-am-i","title":"Who am I ?","text":"<p>My name is Patrik Uytterhoeven and I work for a Belgium company named Open-Future. I started at this company at Januari 2013 and that's when my journey started with Zabbix as well. They gave me the opportunity to build my experience and to get certified as Zabbix trainer. Since this year I am officially 10y Zabbix trainer. If you would like to follow one of my trainings feel free to register for a training at our website www.open-future.be. Why would you follow a training if you can read this book for free are you now thinking? Because trainings just like the book explain you all the details on how to set up and do things but also give you valueable tips and feedback that you never get from a book. Books just can't cover everything.</p>"},{"location":"#what-os-do-i-need","title":"What OS do I need ?","text":"<p>Since I work mostly with RHEL based systems and since I am convinced that RHEL is the better choice in Production environments I have chosen to focus on using one of the forks that is available for free. Zabbix is supported on Ubuntu, Debian, Suse, Debian, .... and it can be compiled on any OS that is Unix based so it's almost impossible to cover them all. However the book is Opensource and in GIT so feel free to contribute the code for your favorite flavour :). I will use Rocky Linux 9 in this book, but it should work for most of the other installations as well.</p>"},{"location":"#what-version-of-zabbix-is-used-in-this-book","title":"What version of Zabbix is used in this book ?","text":"<p>Since we are almost at the release of Zabbix 7, I will focus on version 7 since it will be the new LTS. It should also apply to most other versions but of course there will be minor changes. In the future, if there is enough support from the community to update this book together with it would be great if we could build a book for every LTS version available.</p>"},{"location":"#how-to-use-this-book","title":"How to use this book ?","text":"<p>The book will try to cover all the topics, feel free to let me know if something is missing or feel free to make a pull request.  There is no need to start from page 1 and read the book till the end. Some people will be looking for basic knowledge others might want to skip to the fun part, so I want the book to be useful for everyone. Therefor I will try to explain as best as possible in every topic the exact steps needed to reproduce.</p> <p>There will be moments in the book where you need to type some code, I will show the commands you need to type in a box just like here.</p> <pre><code># some command \n</code></pre> <p>Notes to some useful documentation will be added at the bottom of the page.</p> <p>Here is a simple footnote<sup>1</sup>. With some additional text after it.</p> <p>In case there is some important information to share I will add notes in the documentation like can be seen here :</p> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Info <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Tip <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Question <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Warning <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Bug <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Example <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <ol> <li> <p>My reference.\u00a0\u21a9</p> </li> </ol>"},{"location":"01-Getting%20started%20with%20Zabbix/","title":"Getting started with Zabbix","text":""},{"location":"01-Getting%20started%20with%20Zabbix/#requirements","title":"Requirements","text":"<p>Zabbix has a set of requirements that need to be met on the hardware level and software level. These requirements can change over time and also depends on the size of your setup and the software you choose. So before you start buying metal or installing a random database version have a look at the Zabbix documentation and check the latest requirements for the version you want to install. The latest requirements can be found here. Don't forget to select your correct Zabbix version from the list.</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#basic-os-configuration-before-we-start","title":"Basic OS configuration before we start","text":""},{"location":"01-Getting%20started%20with%20Zabbix/#firewall","title":"firewall","text":"<p>It's important for our Zabbix server to have an OS that is well prepared before we start to install our monitoring tool. First we need to make sure our firewall is installed. </p> <p><code># dnf install firewalld --now</code></p> <p>Our firewall is installed now, and we are ready to configure the needed ports. For our Zabbix server, we need to allow access to port 10051/tcp this is the port where our Zabbix trapper listens on for incoming data. So we need to open this port in our firewall to allow access to our Zabbix trapper.</p> <p><code># firewall-cmd --add-service=Zabbix-server --permanent</code></p> <p>or if the service is not known</p> <p><code># firewall-cmd --add-port=10051/tcp --permanent</code></p> Note <p>Firewalld is the replacement of iptables in Redhat and allows us to make changes available immediately without the need to restart a service. It's possible that your distribution is not using Firewalld in this case you have to look to the documentation of your OS.</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#timeserver","title":"timeserver","text":"<p>Another thing we need to configure is the setup of timeserver and sync our Zabbix server to the timeserver by making use of an ntp client. This needs to be done for the Zabbix server but also for the devices we will monitor as time is very important for Zabbix. Imagine one of our hosts having a time zone that is wrong we could end up looking for a problem in Zabbix that happened 6h ago while it had happened maybe only 2h ago.</p> <p><code># dnf install chronyd --now</code></p> <p>Chrony should be installed now and enabled and running. This can be verified with the command:</p> <p><code># systemctl status chronyd</code></p> Note <p>dnf is a packagemanager from RedHat you need to replace dnf with your correct packagemanager like zyper, apt, yum, ... chrony is a replacement for ntpd and does a better job being faster and more accurate. If your OS does not support chrony then maybe ntpd is still available.</p> <p>Once Chrony is installed we also need to setup our correct time zone. We can have a look first with 'timedatectl' to see how our time is configured </p> <pre><code># timedatectl\n               Local time: Thu 2023-11-16 15:09:14 UTC\n           Universal time: Thu 2023-11-16 15:09:14 UTC\n                 RTC time: Thu 2023-11-16 15:09:15\n                Time zone: UTC (UTC, +0000)\nSystem clock synchronized: yes\n              NTP service: active\n          RTC in local TZ: no\n</code></pre> <p>Make sure that the service cronyd is active, see above on how to do if you missed it. We can choose the correct time zone from a list that we can lookup with the following command:</p> <pre><code># timedatectl list-time zones\n</code></pre> <p>This will give us a list with all available time zones. Choose the one closest to you.</p> <pre><code>Africa/Abidjan\nAfrica/Accra\n\n...\n\nPacific/Tongatapu\nPacific/Wake\nPacific/Wallis\nUTC\n</code></pre> <p>We can now configure our correct time zone with the following command:</p> <pre><code>timedatectl set-time zone Europe/Brussels\n</code></pre> <p>When we look again we should see our time zone properly configured.</p> <pre><code># timedatectl\n               Local time: Thu 2023-11-16 16:13:35 CET\n           Universal time: Thu 2023-11-16 15:13:35 UTC\n                 RTC time: Thu 2023-11-16 15:13:36\n                Time zone: Europe/Brussels (CET, +0100)\nSystem clock synchronized: yes\n              NTP service: active\n          RTC in local TZ: no\n</code></pre> Note <p>Some people like to install all servers in the UTC time zone so that all server logs are in the same time zone when having servers all over the world. Zabbix supports user based time zone settings so it's possible to keep the time zone in UTC on the server and then add the correct time zone in the user interface if you like.</p> <p>We can test if Chrony is syncronizing with the correct timeservers as well by running the command chronyc</p> <pre><code># chronyc\nchrony version 4.2\nCopyright (C) 1997-2003, 2007, 2009-2021 Richard P. Curnow and others\nchrony comes with ABSOLUTELY NO WARRANTY.  This is free software, and\nyou are welcome to redistribute it under certain conditions.  See the\nGNU General Public License version 2 for details.\n\nchronyc&gt;\n</code></pre> <p>Then we type <code>sources</code></p> <pre><code>chronyc&gt; sources\nMS Name/IP address         Stratum Poll Reach LastRx Last sample\n===============================================================================\n^- 51-15-20-83.rev.poneytel&gt;     2   9   377   354   +429us[ +429us] +/-  342ms\n^- 5.255.99.180                  2  10   377   620  +7424us[+7424us] +/-   37ms\n^- hachi.paina.net               2  10   377   412   +445us[ +445us] +/-   39ms\n^* leontp1.office.panq.nl        1  10   377   904  +6806ns[ +171us] +/- 2336us\n</code></pre> <p>Here we can see that we are using a bunch of ntp servers that are not in our own country so we better swicht to some timeservers in our local country or if we have a timeserver in our company we could use this one. We can find some local timeservers here : https://www.ntppool.org/</p> <p>To change this we have to edit our config file \"/etc/chrony.conf\" and replace the existing ntp server with our local one </p> <pre><code># Use public servers from the pool.ntp.org project.\n# Please consider joining the pool (http://www.pool.ntp.org/join.html).\npool 2.centos.pool.ntp.org iburst\n</code></pre> <p>And change it to a local server:</p> <pre><code># Use public servers from the pool.ntp.org project.\n# Please consider joining the pool (http://www.pool.ntp.org/join.html).\npool be.pool.ntp.org iburst\n</code></pre> <p>Don't forget to restart the ntpd client of course.</p> <pre><code># systemctl restart chronyd\n</code></pre> <p>When we look again we will see that we are now using our local timeservers.</p> <pre><code>chronyc&gt; sources\n\nMS Name/IP address         Stratum Poll Reach LastRx Last sample\n===============================================================================\n^- ntp1.unix-solutions.be        2   6    17    43   -375us[ -676us] +/-   28ms\n^* ntp.devrandom.be              2   6    17    43   -579us[ -880us] +/- 2877us\n^+ time.cloudflare.com           3   6    17    43   +328us[  +27us] +/- 2620us\n^+ time.cloudflare.com           3   6    17    43   +218us[  -83us] +/- 2815us\n</code></pre>"},{"location":"01-Getting%20started%20with%20Zabbix/#installing-zabbix","title":"Installing Zabbix","text":"<p>Before we can install Zabbix we first have to know how the design is. The Zabbix server has been build op modular based on 3 components.</p> <ul> <li>The Zabbix server</li> <li>The Zabbix web server</li> <li>The Zabbix database</li> </ul> <p></p> <p>All these components can be installed on 1 server or can be split over 3 different servers.  The Zabbix server itself is the brain this part is doing all the trigger calculations and sending all the alert. The database is where the Zabbix server stores its config and all the data that we have gathered. The web server provides us with a front-end. Note that Zabbix has a API and that this is also located on the front-end and not on the Zabbix server side.</p> <p>All these parts have to work together so as you can see in our image above. The Zabbix server needs to read the config and store the data in our database and the Zabbix front-end needs to be able to write the configuration in the database as well. The Zabbix front-end also needs to check the online status of our Zabbix server and needs to read some other information as well.</p> <p>For our setup, we will use 2 VM's 1 VM with a Zabbix server and the Zabbix web server and another VM with the database.</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#installing-zabbix-with-mariadb","title":"Installing Zabbix with MariaDB","text":"<p>Let us start with the installation of the MariaDB server, you need to create a MariaDB repository configuration file <code>mariadb.repo</code> manually in the following path <code>/etc/yum.repos.d/</code>. To create a MariaDB repository file, you can use the following command.</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#add-the-mariadb-repo","title":"Add the MariaDB repo","text":"<pre><code>vi /etc/yum.repos.d/mariadb.repo\n</code></pre> <p>The above command will create a new repository file, Once it is created, you need to add the following configuration into the file. Make sure your version in this case 10.11 is supported by Zabbix by looking at the latest requirements for your version. </p> <pre><code># MariaDB 10.11 RedHatEnterpriseLinux repository list - created 2023-11-01 14:20 UTC\n# https://mariadb.org/download/\n[mariadb]\nname = MariaDB\n# rpm.mariadb.org is a dynamic mirror if your preferred mirror goes offline. See https://mariadb.org/mirrorbits/ for details.\n# baseurl = https://rpm.mariadb.org/10.11/rhel/$releasever/$basearch\nbaseurl = https://mirror.23m.com/mariadb/yum/10.11/rhel/$releasever/$basearch\n# gpgkey = https://rpm.mariadb.org/RPM-GPG-KEY-MariaDB\ngpgkey = https://mirror.23m.com/mariadb/yum/RPM-GPG-KEY-MariaDB\ngpgcheck = 1\n\n\n</code></pre> <p>Lets update our OS first with the latest patches</p> <pre><code># dnf update -y\n</code></pre>"},{"location":"01-Getting%20started%20with%20Zabbix/#install-the-mariadb-database","title":"Install the MariaDB database","text":"<p>Now we are ready to install our MariaDB database.</p> <pre><code># dnf install MariaDB-server MariaDB-client\n</code></pre> <p>We are now ready to enable and start or MariaDB database.</p> <pre><code># systemctl enable mariadb --now\n</code></pre> <p>Once the installation is complete, you can verify the version of the MariaDB server by using the following command:</p> <pre><code># mysql -V\n</code></pre> <p>The output should look like this:</p> <pre><code>mysql  Ver 15.1 Distrib 10.11.6-MariaDB, for Linux (x86_64) using  EditLine wrapper\n</code></pre> <p>And when we ask the status of our MariaDB server we should get an output like this:</p> <pre><code># systemctl status mariadb\n\n\u25cf mariadb.service - MariaDB 10.11.6 database server\n     Loaded: loaded (/usr/lib/systemd/system/mariadb.service; enabled; preset: disabled)\n    Drop-In: /etc/systemd/system/mariadb.service.d\n             \u2514\u2500migrated-from-my.cnf-settings.conf\n     Active: active (running) since Sat 2023-11-18 19:19:36 CET; 2min 13s ago\n       Docs: man:mariadbd(8)\n             https://mariadb.com/kb/en/library/systemd/\n    Process: 41986 ExecStartPre=/bin/sh -c systemctl unset-environment _WSREP_START_POSITION (code=exited, status=0/SUCCESS)\n    Process: 41987 ExecStartPre=/bin/sh -c [ ! -e /usr/bin/galera_recovery ] &amp;&amp; VAR= ||   VAR=`cd /usr/bin/..; /usr/bin/galera_recovery`; [ $? -eq 0 ]   &amp;&amp; systemctl set-environment _WSREP_START&gt;\n    Process: 42006 ExecStartPost=/bin/sh -c systemctl unset-environment _WSREP_START_POSITION (code=exited, status=0/SUCCESS)\n   Main PID: 41995 (mariadbd)\n     Status: \"Taking your SQL requests now...\"\n      Tasks: 9 (limit: 12344)\n     Memory: 206.8M\n        CPU: 187ms\n</code></pre>"},{"location":"01-Getting%20started%20with%20Zabbix/#securing-the-database","title":"Securing the database","text":"<p>It's time to secure our database by removing the test database and user and set our own root password.  Run the command <code>mariadb-secure-installation</code>, you should get the following output.</p> <pre><code># mariadb-secure-installation\n\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB\n      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!\n\nIn order to log into MariaDB to secure it, we'll need the current\npassword for the root user. If you've just installed MariaDB, and\nhaven't set the root password yet, you should just press enter here.\n\nEnter current password for root (enter for none):\nOK, successfully used password, moving on...\n\nSetting the root password or using the unix_socket ensures that nobody\ncan log into the MariaDB root user without the proper authorisation.\n\nYou already have your root account protected, so you can safely answer 'n'.\n\nSwitch to unix_socket authentication [Y/n] n\n ... skipping.\n\nYou already have your root account protected, so you can safely answer 'n'.\n\nChange the root password? [Y/n] y\nNew password:\nRe-enter new password:\nPassword updated successfully!\nReloading privilege tables..\n ... Success!\n\n\nBy default, a MariaDB installation has an anonymous user, allowing anyone\nto log into MariaDB without having to have a user account created for\nthem.  This is intended only for testing, and to make the installation\ngo a bit smoother.  You should remove them before moving into a\nproduction environment.\n\nRemove anonymous users? [Y/n] y\n ... Success!\n\nNormally, root should only be allowed to connect from 'localhost'.  This\nensures that someone cannot guess at the root password from the network.\n\nDisallow root login remotely? [Y/n] y\n ... Success!\n\nBy default, MariaDB comes with a database named 'test' that anyone can\naccess.  This is also intended only for testing, and should be removed\nbefore moving into a production environment.\n\nRemove test database and access to it? [Y/n] y\n - Dropping test database...\n ... Success!\n - Removing privileges on test database...\n ... Success!\n\nReloading the privilege tables will ensure that all changes made so far\nwill take effect immediately.\n\nReload privilege tables now? [Y/n] y\n ... Success!\n\nCleaning up...\n\nAll done!  If you've completed all of the above steps, your MariaDB\ninstallation should now be secure.\n\nThanks for using MariaDB!\n</code></pre>"},{"location":"01-Getting%20started%20with%20Zabbix/#create-the-zabbix-database","title":"Create the Zabbix database","text":"<pre><code># mysql -uroot -p\npassword\n\nMariaDB [(none)]&gt; create database zabbix character set utf8mb4 collate utf8mb4_bin;\nMariaDB [(none)]&gt; grant all privileges on zabbix.* to 'zabbix-web'@'&lt;zabbix-server-ip&gt;' identified by '&lt;zabbix-web password&gt;';\nMariaDB [(none)]&gt; grant all privileges on zabbix.* to 'zabbix-srv'@'&lt;zabbix-server-ip&gt;' identified by '&lt;zabbix-srv password&gt;';\nMariaDB [(none)]&gt; grant all privileges on zabbix.* to 'zabbix-web'@'localhost' identified by '&lt;zabbix-web password&gt;';\nMariaDB [(none)]&gt; grant all privileges on zabbix.* to 'zabbix-srv'@'localhost' identified by '&lt;zabbix-srv password&gt;';\nMariaDB [(none)]&gt; set global log_bin_trust_function_creators = 1;\nMariaDB [(none)]&gt; quit\n</code></pre> Warning <p>The Zabbix documentation explicitly mentions that deterministic triggers need to be created during the import of schema. On MySQL and MariaDB, this requires GLOBAL log_bin_trust_function_creators = 1 to be set if binary logging is enabled and there is no superuser privileges and log_bin_trust_function_creators = 1 is not set in MySQL configuration file.</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#add-the-zabbix-repository-and-populate-the-db","title":"Add the Zabbix repository and populate the DB","text":"<pre><code># rpm -Uvh https://repo.zabbix.com/zabbix/6.5/rocky/9/x86_64/zabbix-release-6.5-2.el9.noarch.rpm\n# dnf clean all\n# dnf install zabbix-sql-scripts\n</code></pre> <p>Upload the data from zabbix (db structure, images, user, ... )</p> <pre><code># zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix-srv -p zabbix\n</code></pre> Warning <p>Depending on the speed of your hardware or VM this can take a few seconds upto a few minutes so please don't cancel just sit and wait for the prompt</p> <p>Log back into your MariaDB Database as root</p> <pre><code># mysql -uroot -p\n</code></pre> <p>Remove the global parameter again as its not needed anymore and also for security reasons.</p> <pre><code>MariaDB [(none)]&gt; SET GLOBAL log_bin_trust_function_creators = 0;\nQuery OK, 0 rows affected (0.001 sec)\n</code></pre>"},{"location":"01-Getting%20started%20with%20Zabbix/#configure-the-firewall","title":"Configure the firewall","text":"<p>One last thing we need to do is open the firewall and allow incoming connections for the MariaDB database from our Zabbix server because at the moment we dont accept any connections yet.</p> <pre><code># firewall-cmd --list-all\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3 enp0s8\n  sources:\n  services: cockpit dhcpv6-client  ssh\n  ports:\n  protocols:\n  forward: yes\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n</code></pre> <p>First we will create an appropriate zone for our MariaDB and open port 3306/tcp but only for the ip from our Zabbix server.</p> <pre><code># firewall-cmd --new-zone=mariadb-access --permanent\nsuccess\n\n# firewall-cmd --reload\nsuccess\n\n# firewall-cmd --get-zones\nblock dmz drop external home internal mariadb-access nm-shared public trusted work\n\n# firewall-cmd --zone=mariadb-access --add-source=&lt;zabbix-serverip&gt; --permanent\n\nsuccess\n# firewall-cmd --zone=mariadb-access --add-port=3306/tcp  --permanent\n\nsuccess\n# firewall-cmd --reload\n</code></pre> <p>Now lets have a look to our firewall rules to see if they are what we expected:</p> <pre><code># firewall-cmd --zone=mariadb-access --list-all\n</code></pre> <pre><code>mariadb-access (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces:\n  sources: &lt;ip from zabbix-server&gt;\n  services:\n  ports: 3306/tcp\n  protocols:\n  forward: no\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n</code></pre> <p>Our database server is ready now to accept connections from our Zabbix server :)</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#installing-the-zabbix-server","title":"Installing the Zabbix Server","text":"<pre><code>5  rpm -Uvh https://repo.zabbix.com/zabbix/6.5/rocky/9/x86_64/zabbix-release-6.5-2.el9.noarch.rpm\n6  dnf clean all\n7  dnf install zabbix-server-mysql zabbix-web-mysql zabbix-nginx-conf zabbix-selinux-policy zabbix-agent\n8  vi /etc/zabbix/zabbix_server.conf\n9  setenforce 0\n</code></pre> <p>10  systemctl enable zabbix-server --now    11  tail /var/log/zabbix/zabbix_server.log    12  tail -f /var/log/zabbix/zabbix_server.log    13  systemctl stop zabbix-server    14  systemctl start zabbix-server    15  tail -f /var/log/zabbix/zabbix_server.log</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#installing-zabbix-with-mysql","title":"Installing Zabbix with MySQL","text":"<p>ToDo</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#installing-zabbix-with-postgresql","title":"Installing Zabbix with PostgreSQL","text":"<p>ToDo</p>"},{"location":"01-Getting%20started%20with%20Zabbix/#setting-up-zabbix-ha","title":"Setting up Zabbix HA","text":"<p>ToDo</p>"},{"location":"02-Starting%20with%20the%20basic%20configuration/","title":"02 Starting with the basic configuration","text":""},{"location":"02-Starting%20with%20the%20basic%20configuration/#working-with-items","title":"Working with items","text":""},{"location":"02-Starting%20with%20the%20basic%20configuration/#working-with-triggers","title":"Working with triggers","text":""},{"location":"02-Starting%20with%20the%20basic%20configuration/#working-with-templates","title":"Working with templates","text":""}]}